{"version":3,"sources":["swifter_black.png","mobile.png","video2.gif","user.gif","mynew.mp4","Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","state","company","firstName","lastName","url","email","choice","status","style","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","user","name","last","then","console","log","setState","forceUpdate","this","target","value","className","id","htmlFor","type","placeholder","onChange","change","required","onClick","defaultChecked","React","Component","App","props","menu","bind","backgroundColor","src","logo","alt","class","href","image","width","height","video2","color","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eba318f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/swifter_black.ed72796e.png\";","module.exports = __webpack_public_path__ + \"static/media/mobile.73948da1.png\";","module.exports = __webpack_public_path__ + \"static/media/video2.04847a91.gif\";","module.exports = __webpack_public_path__ + \"static/media/user.6555f7cb.gif\";","module.exports = __webpack_public_path__ + \"static/media/mynew.5c6704ea.mp4\";","import React from \"react\";\nexport default class Form extends React.Component {\n  state = {\n    company: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    url: \"\",\n    email: \"\",\n    choice: \"Advertise\",\n    status: \"\",\n    style: \"yes\"\n  };\n  change(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          company: this.state.company,\n          name: this.state.firstName,\n          last: this.state.lastName,\n          email: this.state.email,\n          url: this.state.url,\n          choice: this.state.choice\n        }\n      })\n    }).then(function() {\n      console.log(\"Success\");\n    });\n    this.setState({\n      company: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      url: \"\",\n      email: \"\",\n      choice: \"\",\n      status: \"\",\n      style: \"\"\n    });\n    this.forceUpdate();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.style ? (\n          <div className=\"contact-container\">\n            <div id=\"contact\">\n              <h1 className=\"title-demand\">Let's talk :)</h1>\n\n              <p className=\"contact-description\">\n                Want to know more about Swifter and what we could do for you?\n                Let’s get a conversation going. Complete the form below and\n                we’ll be in touch as soon as possible.\n              </p>\n            </div>\n\n            <form onSubmit={this.onSubmit}>\n              <label htmlFor=\"app\">Company or App Name</label>\n              <input\n                type=\"text\"\n                id=\"company\"\n                name=\"company\"\n                placeholder=\"Your app name..\"\n                onChange={e => this.change(e)}\n                required\n                value={this.state.company}\n              ></input>\n              <label htmlFor=\"url\">App Store URL*</label>\n              <input\n                type=\"text\"\n                id=\"url\"\n                name=\"url\"\n                placeholder=\"Your app store URL..\"\n                onChange={e => this.change(e)}\n                required\n                value={this.state.url}\n              ></input>\n              <label htmlFor=\"fname\">First Name</label>\n              <input\n                type=\"text\"\n                id=\"fname\"\n                name=\"firstName\"\n                placeholder=\"Your first name..\"\n                onChange={e => this.change(e)}\n                required\n                value={this.state.firstName}\n              ></input>\n              <label htmlFor=\"lname\">Last Name</label>\n              <input\n                type=\"text\"\n                id=\"lname\"\n                name=\"lastName\"\n                placeholder=\"Your last name..\"\n                onChange={e => this.change(e)}\n                required\n                value={this.state.lastName}\n              ></input>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Your email..\"\n                onChange={e => this.change(e)}\n                required\n                value={this.state.email}\n              ></input>\n\n              <label htmlFor=\"choice\">\n                {\" \"}\n                Are You Looking to Advertise or Monetize with Swifter?*\n              </label>\n              <br></br>\n\n              <div className=\"options\">\n                <div className=\"radio-container\">\n                  <input\n                    type=\"radio\"\n                    onClick={e => this.change(e)}\n                    name=\"choice\"\n                    value=\"Advertise\"\n                  ></input>\n                  Advertise\n                </div>\n                <div className=\"radio-container\">\n                  <input\n                    type=\"radio\"\n                    onClick={e => this.change(e)}\n                    name=\"choice\"\n                    value=\"Monetize\"\n                    defaultChecked\n                  ></input>\n                  Monetize\n                </div>\n\n                <div className=\"radio-container\">\n                  <input\n                    type=\"radio\"\n                    onClick={e => this.change(e)}\n                    name=\"choice\"\n                    value=\"Both\"\n                  ></input>\n                  Both\n                </div>\n              </div>\n\n              <br></br>\n              <button type=\"submit\" value=\"Submit\">\n                Send\n              </button>\n            </form>\n          </div>\n        ) : (\n          <h1 className=\"text-contact\">\n            Thank you!<br></br>\n            We will be in touch shortly.\n          </h1>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"./App.css\";\nimport logo from \"./swifter_black.png\";\nimport image from \"./mobile.png\";\nimport video from \"./mynew.mp4\";\nimport video2 from \"./video2.gif\";\nimport user from \"./user.gif\";\n\nimport Form from \"./Form\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: true\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick = e => {\n    e.preventDefault();\n    this.setState({\n      menu: !this.state.menu\n    });\n  };\n\n  render() {\n    return (\n      // <div className=\"container\">\n      <div className=\"main\">\n        {/* <video ref=\"vidRef\" src={video} type=\"video/mp4\" autoPlay></video> */}\n        <div style={{ backgroundColor: \"white\" }}>\n          <nav className=\"header\">\n            <div>\n              <img src={logo} alt=\"Logo\" className=\"logo\" />\n            </div>\n\n            {/* <div className=\"hamburger\">\n          <div className=\"line line1\"></div>\n          <div className=\"line line2\"></div>\n          <div className=\"line line3\"></div>\n        </div> */}\n\n            {this.state.menu ? (\n              <button\n                onClick={this.onClick}\n                className=\"hamburger hamburger--spring\"\n                type=\"button\"\n              >\n                <span className=\"hamburger-box\">\n                  <span className=\"hamburger-inner\"></span>\n                </span>\n              </button>\n            ) : (\n              <button\n                onClick={this.onClick}\n                className=\"hamburger hamburger--spring is-active\"\n                type=\"button\"\n              >\n                <span class=\"hamburger-box\">\n                  <span class=\"hamburger-inner\"></span>\n                </span>\n              </button>\n            )}\n\n            <div className=\"navigation\">\n              <a href=\"#\">Home</a>\n              <a href=\"#advertise\">Advertisers</a>\n              <a href=\"#monetization\">Publishers</a>\n              <a href=\"#contact\">Contact</a>\n            </div>\n          </nav>\n\n          <div className=\"container-home\">\n            <div className=\"image-text\">\n              <p className=\"first-text\">Grow your mobile business</p>\n              <p className=\"second-text\">\n                Whether you need to acquire high-quality users, boost engagement\n                and retention, or maximize ad revenue, Swifter has you covered.\n              </p>\n              <button className=\"primary-btn\">Find out more</button>\n\n              {/* <a href=\"#monetization\">\n            <button type=\"button\" className=\"primary-btn\">\n              Developer\n            </button>\n          </a>\n\n          <a href=\"#advertise\">\n            <button className=\"primary-btn\"> Advertiser</button>\n          </a> */}\n            </div>\n            <div></div>\n            <img\n              src={image}\n              className=\"responsive-home\"\n              alt=\"image\"\n              width=\"600\"\n              height=\"400\"\n            />\n          </div>\n          <div className=\"strip-blue\" id=\"advertise\">\n            <h1 className=\"title-advertisers\">Advertisers</h1>\n\n            {/* <p className=\"text-white\">\n              Preferential access to the data-driven audiences you want to\n              reach, across in-app, mobile web, and desktop.\n            </p> */}\n\n            <img\n              src={video2}\n              className=\"responsive\"\n              alt=\"image\"\n              width=\"525\"\n              height=\"350\"\n              style={{ height: \"auto\" }}\n            />\n            <div className=\"cards\">\n              <div className=\"card\">\n                <h3>Inventory at scale</h3>\n\n                <p className=\"description\">\n                  Global user base lets you scale across non-gaming, gaming,\n                  social apps, and more. Over 500M monthly unique users for\n                  mobile in-app alone.\n                </p>\n              </div>\n              <div className=\"card\">\n                <h3>VPAID Mobile </h3>\n                <p className=\"description\">\n                  Directly track viewability, completion and click-through rates\n                  to see how individual ads are performing and devise improved\n                  ways of engaging with mobile audiences.\n                </p>\n              </div>\n              <div className=\"card\">\n                <h3> Brand safety</h3>\n                <p className=\"description\">\n                  Constant and consistent application of new technologies to\n                  ensure a transparent trading environment. Certified\n                  third-party ad quality partners: Pixalate, WhiteOps.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"strip-white\">\n          <div className=\"container\">\n            <div>\n              <h1\n                className=\"title-advertisers left\"\n                style={{\n                  color: \"#00abcd\"\n                }}\n              >\n                User Aquisition\n              </h1>\n              {/* <h1 className=\"title-ua\">\n                Start your managed or programmatic campaign.\n              </h1> */}\n\n              <ul className=\"text\">\n                <li className=\"list\">\n                  Tap into a database of 2 billion mobile profiles to identify\n                  the most valuable players for your game\n                </li>\n                <li className=\"list\">\n                  Reach mobile app users programmatically in 165+ countries,\n                  across 65,000 apps\n                </li>\n                <li className=\"list\">Increase in-app purchases through</li>\n                <li className=\"list\">\n                  CPA optimization Optimize for mobile gamers, not just installs\n                </li>\n              </ul>\n            </div>\n\n            <img\n              src={user}\n              className=\"responsive\"\n              alt=\"image\"\n              width=\"214\"\n              height=\"462\"\n            ></img>\n          </div>\n\n          {/* <div className=\"footer\">\n        <p>This website is using cookies, please agree</p>\n        <button onClick=\"\">I agree</button>\n      </div> */}\n        </div>\n        <div className=\"strip-green\" id=\"monetization\">\n          <h1 className=\"title-advertisers\">Monetization</h1>\n          {/* <p className=\"text-white\">\n            We help you monetize your audience with global demand from the world’s\n            largest mobile advertisers. Maximize your yield through brand safe\n            content and dedicated service.\n            {/* Swifter provides publishers monetization opportunities with a suite\n              of cross-platform ad formats that range from video (in-stream and\n              interactive in-stream video), to rich media and native units. All\n              our ad formats adhere to the latest VAST, VPAID or MRAID standards. */}{\" \"}\n          {/* </p> */}\n          <div className=\"boxes\">\n            <div className=\"box\">\n              <h1 className=\"subline\"> Global Demand</h1>\n              <p className=\"subline-text\">\n                We help you monetize your audience with global demand from the\n                world’s largest mobile advertisers. Maximize your yield through\n                brand safe content and dedicated service.\n              </p>\n            </div>\n            <div className=\"box\">\n              <h1 className=\"subline\"> Engaging Ad Formats</h1>\n              <p className=\"subline-text \">\n                Excite users with ad formats that enhance your app experience.\n                <br></br>\n                Power your full screen, vertical, and in-feed placements with\n                the highest quality ads\n              </p>\n            </div>\n            <div className=\"box\">\n              <h1 className=\"subline\"> Transparent Reporting</h1>\n              <p className=\"subline-text\">\n                Reporting on all advertiser campaigns running across publishers’\n                websites: campaign & viewability reports, audience insights and\n                inventory quality analysis.\n              </p>\n            </div>\n\n            <div className=\"box\">\n              <h1 className=\"subline\">\n                {\" \"}\n                Programmatic Integration <br></br>\n              </h1>\n              <p className=\"subline-text\">\n                We provide automated solutions for you to maximize your revenue\n                potential, while preserving the viewer experience.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <Form />\n        <footer className=\"footer\">\n          <p>@ Copyright 2019 Global Promoting Services LTD.</p>\n          <p>483 Green Lanes, London, N13 4BS, UK</p>\n        </footer>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}